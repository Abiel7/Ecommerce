/*
 * Ecommerce App
 * api for ecommerce web applications
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: abielkidane16@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Cart;
import org.openapitools.client.model.Item;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CartApi
 */
@Ignore
public class CartApiTest {

    private final CartApi api = new CartApi();

    
    /**
     * Adds an item in shopping cart
     *
     * Adds an item to the shopping cart if it doesn&#39;t already exist, or increment quantity by the specified number of items if it does.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCartItemsByCustomerIdTest() throws ApiException {
        String customerId = null;
        Item item = null;
        List<Item> response = api.addCartItemsByCustomerId(customerId, item);

        // TODO: test validations
    }
    
    /**
     * Replace/add an item in shopping cart
     *
     * Adds an item to the shopping cart if it doesn&#39;t already exist, or replace with given item if it does.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addOrReplaceItemsByCustomerIdTest() throws ApiException {
        String customerId = null;
        Item item = null;
        List<Item> response = api.addOrReplaceItemsByCustomerId(customerId, item);

        // TODO: test validations
    }
    
    /**
     * Delete the shopping cart
     *
     * Deletes the shopping cart of given customer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCartTest() throws ApiException {
        String customerId = null;
        api.deleteCart(customerId);

        // TODO: test validations
    }
    
    /**
     * Delete the item from shopping cart
     *
     * Deletes the item from shopping cart of given customer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteItemFromCartTest() throws ApiException {
        String customerId = null;
        String itemId = null;
        api.deleteItemFromCart(customerId, itemId);

        // TODO: test validations
    }
    
    /**
     * Returns the shopping cart
     *
     * Returns the shopping cart of given customer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartByCustomerIdTest() throws ApiException {
        String customerId = null;
        List<Cart> response = api.getCartByCustomerId(customerId);

        // TODO: test validations
    }
    
    /**
     * Returns the list of products in user&#39;s shopping cart
     *
     * Returns the items in shopping cart of given customer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartItemsByCustomerIdTest() throws ApiException {
        String customerId = null;
        List<Item> response = api.getCartItemsByCustomerId(customerId);

        // TODO: test validations
    }
    
    /**
     * Returns given item from user&#39;s shopping cart
     *
     * Returns given item from shopping cart of given customer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCartItemsByItemIdTest() throws ApiException {
        String customerId = null;
        String itemId = null;
        List<Item> response = api.getCartItemsByItemId(customerId, itemId);

        // TODO: test validations
    }
    
}
