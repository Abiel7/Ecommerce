openapi: 3.0.3
info:
  title: Ecommerce app
  description: the purpose of this api is to  demonstrate how ecommerce api can be designed
  version: 1.0.0
tags:
  - name: cart
    description: Everything about Cart
  - name: order
    description: Order Operation
  - name: user
    description: All operations about user
  - name: address
    description: adress operations
  - name: customer
    description: cutomer operations
  - name: product
    description: product operations
  - name: shipping
    description: shipment operations
  - name: payment
    description: payment operations
paths:
  /api/v1/carts/{customerId}:
    get:
      tags:
        - cart
      summary: Return customers shopping cart
      description: Returns customers shopping cart
      operationId: getCartByCustomerId
      parameters:
        - name: customerId
          in: path
          description: The customers Identification
          required: true
          schema:
            type: string
      responses:
        200:
          description: operation was successful
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        400:
          description: Given customer id does not exist
          content: {}
    delete:

      tags:
        - cart
      summary: delete the shopping cart of a given customerid
      description: delete shopping cart of agiven  customerid
      operationId: deleteCart
      parameters:
        - name: customerId
          in: path
          description: The customers Identification
          required: true
          schema:
            type: string
      responses:
        200:
          description: opperation successful
        400:
          description: customer id does not exist
          content: {}


components:
  schemas:
    Cart:
      description: Users ShoppingCart
      type: object
      properties:
        customerId:
          description: carts owner
          type: string
        items:
          description: user chosen items
          type: array
          items:
            $ref: '#/components/schemas/Item'
    Item:
      description: Items in shopping cart
      type: object
      properties:
        itemId:
          description:  the item identifier
          type: string
        quantity:
          description: The item Quantity
          type: number
          format: int32
        unitPrice :
          description: Price per unit
          type: number
          format: double
    Order:
      description: Order Representation
      type: object
      properties:
        id:
          description: order id
          type: string
        customer:
          $ref: '#/components/schemas/User'
        address:
          $ref: '#/components/schemas/Address'
        card:
          $ref: '#/components/schemas/Card'
        date:
          description: order date
          type: string
          format: date-time
        items:
          description: ordered items
          type: array
          items:
            $ref: '#/components/schemas/Item'
        total:
          description: total amount of the order
          type: number
          format: double
        shippment:
          $ref: '#/components/schemas/Shipment'
        payment:
          $ref: '#/components/schemas/Payment'
        status:
          description: order status an order can be on few status
          type: string
          enum:
            - CREATED
            - PAID
            - PAYMENT_FAILED
            - SHIPPED
            - SHIPPEMENT_FAILED
            - COMPLETED
      xml:
        name: Order
    User:
      description: Representation of a user


    AddAddresseReq:
      description: Request for new card Registration
      allOf:
        - $ref: '#/components/schemas/Address'
        - type: object
          properties:
            userId:
              type: string
    Address:
      type: object
      properties:
        number:
          description: house number
          type: string
        recidency:
          description: building name
          type: string
        street:
          description: street name
          type: string
        city:
          description: city name
        state:
          description: state name
          type: string
        country:
          description: country name
          type: string
        postCode:
          description: postal area code
          type: string
      xml:
        name: Address
    Card:
      type: object
      properties:
        cardnumber:
          description: card number
          type: string
        expires:
          description: month and  year  of expiration
          type: string
        ccv:
          description: ccv code of a card
          type: string
      xml:
        name: Card

    AddCardReq:
      description: Request for new card registration
      allOf:
        - $ref: '#/components/schemas/Card'
        - type: object
          properties:
            userId:
              type: string
      xml:
        name: AddCardReq

    Payment:

    PaymentReq:

    Shipment:

    ShippingReq:

    NewOrder:
      description: request information

    Authorization:
      description: payment authorization
      type: object
      properties:
        orderid:
          description: order identification
          type: string
        time:
          description: timestamp when the  authorization was  created
          type: string
          format: date-time
        authorized:
          description: is payment authorized
          type: boolean
        message:
          description: payment approval or  rejection
          type: string
        error:
          description: some error occured proccess that error if  any
          type: string

      xml:
        name: Authorization


    URI:
      type: object
      xml:
        name: URI

    CustomerInfoOnCard:
      description: customer infomation  requaired for payment pocessing
      type: object
      properties:
        firstName:
          description: customers first name
          type: string
        lastName:
          description: customers last  name
          type: string
      xml:
        name: CustomerInfoOnCard

    Product:
      description: Product information
      type: object
      properties:
        id:
          description: unike product identifier
          type: string
        name:
          description: product name
          type: string
        description:
          description: product description
          type: string
        imageURL:
          description: image URL
          type: string
        price:
          description: product price
          type: number
          format: double
        count:
          description: product count
          type: integer
          format: int32
        tag:
          description: tag associated with the product
          type: array
          uniqueItems: true
          items:
            type: string

